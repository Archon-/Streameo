@model List<Streameo.Models.Song>
@{
    if (Model.Count > 0)
    {
        ViewBag.Title = Model[0].Album;
    }
}
<link href="../../Content/rateit.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/jquery.rateit.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.rateit').bind('rated', function (e) {
            var ri = $(this);

            //if the use pressed reset, it will get value: 0 (to be compatible with the HTML range control), we could check if e.type == 'reset', and then set the value to  null .
            var value = ri.rateit('value');
            var productID = ri.data('productid'); // if the product id was in some hidden field: ri.closest('li').find('input[name="productid"]').val()

            //maybe we want to disable voting?
            ri.rateit('readonly', true);

            $.ajax({
                url: "/Browse/Rate?id=" + productID + "&rating=" + value, //your server side script
                data: { id: productID, value: value }, //our data
                type: 'POST',
                success: function (data) {
                    $('#response').append('<li>' + data + '</li>');

                },
                error: function (jxhr, msg, err) {
                    $('#response').append('<li style="color:red">' + msg + '</li>');
                }
            });
        });
    });
</script>

<h2>
    Artysta: @Html.DisplayFor(modelItem => Model[0].Artist)
</h2>
<h2>
    Album: @Html.DisplayFor(modelItem => Model[0].Album)
</h2>


<table>
    <tr>
        <th>
            #
        </th>
        <th>
            Tytuł utworu
        </th>
        <th>
            Liczba komentarzy
        </th>
        <th>
            Ocena
        </th>
        @if (User.IsInRole("Admin"))
        {
        <th>
            Data dodania
        </th>
        <th>
            Liczba odtworzeń
        </th>
        <th>
            Ścieżka do pliku
        </th>
        <th>
        </th>
        }
    </tr>
    @{ int i = 1;
       }
    
    @foreach (var item in Model)
    {
        <tr>
            <td>
                   @i
                @{ ++i;
                   }
            </td>
            <td>
                <a href="#" onclick="LoadMusicFile(@item.Id,true)">@item.Title</a>
                <a href="#" onclick="AddToPlaylist(@item.Id)">+</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfComments)
            </td>
            <td>
                @if(User.Identity.IsAuthenticated == false) {
                    <div data-productid="@item.Id" data-rateit-resetable="false" data-rateit-readonly="true" data-rateit-value="@item.Rating" class="rateit"></div>
                }
                else {
                    bool voted = false;
                    foreach (var voter in item.Voters)
                    {
                        if (voter.User == User.Identity.Name)
                        {
                            voted = true;
                            break;
                        }
                    }

                    if (voted)
                    {
                        <div data-productid="@item.Id" data-rateit-resetable="false" data-rateit-readonly="true" data-rateit-value="@item.Rating" class="rateit"></div>
                    }
                    else
                    {
                        <div data-productid="@item.Id" data-rateit-resetable="false" data-rateit-value="@item.Rating" class="rateit"></div>
                    }
                }
            </td>
            @if (User.IsInRole("Admin"))
            {
            <td>
                @Html.DisplayFor(modelItem => item.AddDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfPlays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FilePath)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
            }
        </tr>
    }
</table>